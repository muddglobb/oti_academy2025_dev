// This defines the database schema for the User Service
// It only contains profile data - auth data is in Auth-Service

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

// User view - imported from Auth Service for joins
// This is a view - not managed by this service
model User {
  id          Int       @id
  name        String
  email       String
  role        String    // We don't define the enum here since it's from auth service
  type        String?
  nim         String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relation to profile
  profile     UserProfile?

  @@map("users") // This should point to the view from auth service
}

// Profile data only - this is what this service manages
model UserProfile {
  id          Int         @id // Same as User.id in Auth-Service
  status      UserStatus  @default(ACTIVE)
  avatar      String?
  bio         String?     @db.Text
  location    String?
  website     String?
  lastLoginAt DateTime?
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())

  // Relation to User view in the same database or linked view
  user        User        @relation(fields: [id], references: [id])
  
  @@map("user_profiles")
}