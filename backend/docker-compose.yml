services:

  # AUTH SERVICE DATABASE
  auth-service-db:
    image: postgres:17.4-alpine
    env_file: 
      - ./services/auth-service/.env
    environment:
    - POSTGRES_DB=auth_service_db
    - POSTGRES_USER=${PG_USER}
    - POSTGRES_PASSWORD=${PG_PASSWORD} 
    volumes:
      - ./services/auth-service/logs:/var/log/postgresql
      - auth-data:/var/lib/postgresql/data
    networks:
      - oti-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d auth_service_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # AUTH SERVICE API
  auth-service-api:
    build: ./services/auth-service
    env_file:
      - ./services/auth-service/.env
      - .env
    volumes:
      - ./services/auth-service/logs:/home/appuser/app/logs
      - ./libs:/home/appuser/app/libs
    depends_on:
      auth-service-db:
        condition: service_healthy
    networks:
      - oti-network
      
  # PACKAGE SERVICE DATABASE
  package-service-db:
    image: postgres:17.4-alpine
    env_file: 
      - ./services/package-service/.env
    environment:
    - POSTGRES_DB=package_service_db
    - POSTGRES_USER=${PG_USER}
    - POSTGRES_PASSWORD=${PG_PASSWORD} 
    volumes:
      - package-data:/var/lib/postgresql/data
    networks:
      - oti-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d package_service_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PACKAGE SERVICE API
  package-service-api:
    build: ./services/package-service
    env_file:
      - ./services/package-service/.env
      - .env
    volumes:
      - ./services/package-service/logs:/home/appuser/app/logs
      - ./libs:/home/appuser/app/libs
    depends_on:
      package-service-db:
        condition: service_healthy
    networks:
      - oti-network
      
  # Redis cache service
  redis:
    container_name: redis
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - oti-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

      
  api-gateway:
      build: ./api-gateway
      ports:
        - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
      env_file:
        - .env
        - ./api-gateway/.env
      volumes:
      - ./api-gateway/logs:/usr/src/app/logs
      depends_on:
        redis:
          condition: service_healthy
      networks:
        - oti-network
      restart: unless-stopped
      healthcheck:
        test: ["CMD", "wget", "-qO-", "http://localhost:${API_GATEWAY_PORT}/health"]
        interval: 30s
        timeout: 10s
        retries: 3

networks:
  oti-network:
    driver: bridge

volumes:
  auth-data:
  package-data:
  redis-data: